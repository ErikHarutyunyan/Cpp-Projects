============= 00 Warm up ==============

0.1 Գրել ծրագիր, որը էկրանին կտպի “Hello world!” արտահայտության յուրաքանչյուր սիմվոլը նոր տողում։

0.2 Գրել ծրագիր, որը կհաշվի և էկրանին կտպի -10 և 26 թվերի տարբերությունը։


============== 01 Arithmetic and branching ==============

1.1 Գրել ծրագիր, որը մուտքում կստանա 2 ամբողջ թիվ և կարտածի այդ թվերի գումարը

1.2 Գրել ծրագիր, որը մուտքում կստանա ուղղանկյան 2 կողմերի երկարությունը և կարտածի այդ ուղղանկյան մակերեսը։

1.3 Գրել ծրագիր, որը մուտքում կստանա A և B դրական ամբողջ թվերը և կարտածի A֊ն B֊ի բաժանման արդյունքում ստացված 
մնացորդը։ Հայտնի է, որ B֊ն 0 չէ։

1.4 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա ուղղանկյուն սեղանի հիմքերը ու բարձրությունը և կհաշվի այդ սեղանի մակերեսը։

1.5 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա 4 սահող կետով թվեր և կարտածի առաջին երկուսի գումարի և մյուս երկուսի գումարների տարբերությունը։

1.6 Գրել ծրագիր, որը մուտքում կստանա 2 սահող կետով թիվ և կարտածի առաջինի և երկրորդի բաժանման արդյունքում ստացված քանորդը։

1.7 Գրել ծրագիր, որը մուտքում կստանա 3 ամբողջ թիվ և 1 սահող կետ:  Ծրագիրը որպես արդյունք պետք է արտածի ամբողջ թվերի գումարի և սահող կետով թվի բաժանման արդյունքում ստացված քանորդը։ Հայտնի է, որ սահող կետով թիվը հավասար չէ 0֊ի։

1.8 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա A և B ամբողջ թվերը, ապա C և D սահող կետով թվերը։ Որպես արդյունք ծրագիրը պետք է արտածի A * C - B / D արտահայտության արժեքը։ Հայտնի է, որ D֊ն 0 չէ։

1.9 Գրել ծրագիր, որը մուտքում ստանում է N թիվը [1, 26] միջակայքից և արտածում լատինական այբուբենի N-րդ փոքրատառն ու մեծատառը:

1.10 Գրել ծրագիր, որը կհաշվի և կարտածի անգլերեն լեզվի այբուբենի տառերի քանակը։

1.11 Գրել ծրագիր, որը մուտքում կստանա 2 դրական ամբողջ թիվ և կարտածի YES, եթե այդ թվերը հավասար են և NO հակառակ դեպքում։

1.12 Գրել ծրագիր, որը մուտքում կստանա 2 դրական ամբողջ թիվ և կարտածի այդ թվերց մեծը։

1.13 Գրել ծրագիր, որը մուտքում կստանա 3 ամբողջ թիվ և կարտածի այդ թվերից փոքրը։

1.14 Գրել ծրագիր, որը մուտքում կստանա ամբողջ թիվ և կարտածի YES, եթե այդ թիվը զույգ է և 7֊ի բաժանելիս մնացորդում կմնա 3 և NO հակառակ դեպքում։

1.15 Գրել ծրագիր, որը մուտքում կստանա 3 ամբողջ թիվ և կարտածի այդ թվերից մեծությամբ երկրորդը։

1.16 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա 2 սիմվոլ ASCII աղյուսակից և կարտածի YES, եթե երկրորդ սիմվոլն ունի ավելի փոքր ASCII կոդ քան առաջինը և NO հակառակ դեպքում։ Նույն սիմվոլների դեպքում արտածել EQUAL:

1.17 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա A, B, C սահող կետով թվերը։ Որպես արդյունք ծրագիրը
պետք է արտածի YES, եթե A-ն [B, C) միջակայքից է և NO հակառակ դեպքում։ Հայտնի է, որ B֊ն փոքր է քան C֊ն։

1.18 Գրել ծրագիր, որը մուտքում կստանա 4 ամբողջ թիվ և կարտածի YES, եթե բոլոր թվերը մուտքագրվել են նվազման
կարգով և NO հակառակ դեպքում։

1.19 Գրել ծրագիր, որը մոտքում կստանա A, B, C և D ամբողջ թվերը։ Պահանջվում է արտածել A և D թվերի արտադրյալի ու B և C թվերի գումարի տարբերությունը, եթե A-ն գերազանցում է C֊ն։ B և D թվերի գումարի և A֊ի արտադրյալը, եթե C-ն գերազանցում է A֊ն: Հակառակ դեպքում բոլոր չորս թվերի գումարը։

1.20 Գրել ծրագիր, որը մուտքում կստանա A, B, C և D ամբողջ թվերը։ Պահանջվում է արտածել YES եթե A-ն հակադիր է D֊ին և B֊ն հակադիր չէ C ֊ին, NO հակառակ դեպքում։


============== 02 Cycles and static arrays ===============

2.1 Գրել ծրագիր, որը մուտքում կստանա դրական թիվ և կարտածի 10-ից միչև այդ թիվը եղած բոլոր ամբողջ թվերը։ Հայտնի է որ մուտքային թիվը փոքր չէ 10-ից։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով:

2.2 Գրել ծրագիր, որը մուտքում կստանա A և B ամբողջ թվերը և կարտածի [A, B] միջակայքի բոլոր զույգ թվերը։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։

2.3 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա A և B ամբողջ թվերը և կարտածի [A, B] միջակայքի բոլոր այն թվերի քանակը, որոնք առանց մնացորդի բաժանվում են 7֊ի:

2.4 Գրել ծրագիր, որը մուտքում կստանա դրական թիվ և կարտածի մինչև այդ թիվը եղած բոլոր պարզ թվերը։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով:

2.5 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա ամբողջ թիվ այնքան ժամանակ քանի դեռ չի ներմուծվել 0։ Եվ կարտածի ներմուծված թվերի գումարը։ Արգելվում է օգտագործել զանգված:

2.6 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա N և K ոչ բացասական ամբողջ թվերը, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Ծրագիրը որպես արդյունք պետք է արտածի ՛YES՛ եթե N թվերից ճիշտ K հատը մեծ են կամ հավասար 123 ֊ից և ‘NO’ հակառակ դեպքում։ Արգելվում է օգտագործել զանգված։

2.7 Գրել ծրագիր, որը մուտքում ստանում է N բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Որպես արդյունք ծրագիրը պետք է արտածի հաջորականության մեծագույն և փոքրագույն տարրերի տարբերութունը։ Խնդիրը լուծել առանց զանգված օգտագործելու։

2.8 Գրել ծրագիր, որը մուտքում ստանում է N (N ≥ 3) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Որպես արդյունք ծրագիրը պետք է արտածի հաջորդականության 3 ամենամեծ տարրերը։ Տարրերը պետք է արտածել փոքրից մեծ և տարանջատել բացատանիշներով։ Արգելվում է օգտագործել զանգված։

2.9 Գրել ծրագիր, որը մուտքում ստանում է N ոչ բացասական ամբողջ թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Որպես արդյունք ծրագիրը պետք է արտածի հաջորդականությունում մաքսիմալ տարրի հանդիպելու քանակը։ Արգելվում է օգտագործել զանգված։

2.10 Գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 1000) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Որպես արդյունք ծրագիրը պետք է արտածի հաջորդականությունը հակառակ կարգով։ Խնդիրը լուծելիս օգտագործել զանգված։

2.11 Գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 1000) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Որպես արդյունք ծրագիրը պետք է արտածի հաջորդականությունում վերջին տարրից տարբեր տարրերի քանակը։ Խնդիրը լուծելիս օգտագործել զանգված։

2.12 Գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 1000) բնական թիվ, ապա հաջորդականություն N սիմվոլներից կազմված։ Որպես արդյունք ծրագիրը պետք է արտածի հաջորդականության թվանշանները ապա մնացած սիմվոլները։ Արտածվող սիմվոլները միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված։

2.13 Պահանջվում է գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 1000) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Անհրաժեշտ է, որ ծրագիրը նախ արտածի հաջորդականության բացասական տարրերը ապա ոչ բացասականները։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված։

2.14 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա 10 երկարությամբ երկու ամբողջ թվերի հաջորդականություն և կարտածի բոլոր այն տարրերը առաջին հաջորդականությունից, որոնք չկան երկրորդում։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով և պետք է արտածվեն նույն հերթականությամբ ինչպես ներմուծվել են։ Խնդիրը լուծելիս օգտագործել զանգված։

2.15 Պահանջվում է գրել ծրագիր, որը մուտքում ստանում է n (n ≤ 1000) բնական թիվ, ապա a0, a1, a2, ... an-1 ամբողջ թվերի հաջորդականությունը և կարտածի b0, b1, b2, ... b(n-1)/2։ Որտեղ bi = ai + an - i - 1։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված։

2.16 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա n (n ≤ 100) բնական թիվ, ապա a0, a1, a2, ... an-1 ամբողջ թվերի հաջորդականությունը և կարտածի b0, b1, b2, ... bn-1։ Որտեղ bi -ն ai -ից փոքր պարզ թվերի քանակն է։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված։

2.17 Պահանջվում է գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 100) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Հայտնի է, որ հաջորդականության բոլոր տարրերը հանդիպում են ճիշտ երկու անգամ բացառությամբ մեկի։ Պահանջվում է արտածել մեկ անգամ հանդիպող տարրը և կարգահամարը հաջորդականությունում։ Խնդիրը լուծելիս օգտագործել զանգված։

2.18 Պահանջվում է գրել ծրագիր, որը մուտքում ստանում է n (n ≤ 1000) բնական թիվ, ապա a1, a2, a3, ... an ամբողջ թվերի հաջորդականությունը և կարտածի ամենամեծ բացասական թիվը և դրա կարգահամարը, այդպիսին չլինելու դեպքում ՛0 -1՛։ Խնդիրը լուծելիս օգտագործել զանգված։

2.19 Պահանջվում է գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 1000) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Անհրաժեշտ է, որ ծրագիրը արտածի հաջորդականության տարրերը դասավորված նվազման կարգով։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված և bubble sort ալգորիթմ։

2.20 Պահանջվում է գրել ծրագիր, որը մուտքում ստանում է N (N ≤ 1000) բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Անհրաժեշտ է, որ ծրագիրը արտածի հաջորդականության տարրերը դասավորված նվազման կարգով։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված և insertion sort ալգորիթմ։


============== 03 Dynamic arrays և functions ===============

3.1 Գրել ծրագիր, որը մուտքում կստանա բառ (ոչ ավել քան 20 սիմվոլ), և կարտածի մուտքագրված սիմվոլների քանակը։

3.2 Գրել ծրագիր, որը մուտքում կստանա S1 և S2 բառերը (ոչ ավել քան 20 սիմվոլ) և կարտածի ‘YES’, եթե մուտքագրված բառերը հանդիսանում են անագրամ և ‘NO’ հակառակ դեպքում:

3.3 Գրել ծրագիր, որը մուտքում կստանա բառ (ոչ ավել քան 20 սիմվոլ) և կարտածի ‘YES’, եթե մուտքագրված բառը պալինդրոմ է և ‘NO’ հակառակ դեպքում:

3.4 Գրել ծրագիր, որը մուտքում կստանա S բառը (ոչ ավել քան 20 սիմվոլ), ապա ևս մեկ C սիմվոլ։ Անհրաժեշտ է արտածել S բառում առաջին C սիմվոլից աջ ընկած ենթաբառը։

3.5 Գրել ծրագիր, որը մուտքում կստանա S1 բառը (ոչ ավել քան 20 սիմվոլ), S2 բառը (ոչ ավել քան S1 բառում սիմվոլների քանակը) և կարտածի ‘YES’, եթե S2 հանդիսանում է ենթաբառ S1֊ից և ‘NO’ հակառակ դեպքում:

3.6 Գրել ծրագիր, որը մուտքում կստանա N բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Անհրաժեշտ է, որ ծրագիրը արտածի հաջորդականության զույգ տարրերի քանակը։ Խնդիրը լուծելիս օգտագործել դինամիկ զանգված։

3.7 Գրել ծրագիր, որը մուտքում կստանա N բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Պահանջվում է արտածել հաջորդականության բոլոր այն տարրերը որոնք կրկնվում են։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել դինամիկ զանգված։

3.8 Գրել ծրագիր, որը մուտքում կստանա N բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Պահանջվում է արտածել հաջորդականության ամենաերկար խիստ աճող անընդհատ ենթահաջորդականության տարրերի քանակը։

3.9 Գրել ծրագիր, որը մուտքում կստանա N բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Պահանջվում է արտածել հաջորդականության յուրաքանչյուր տարրի կրկնությունների քանակը։

3.10 Գրել ծրագիր, որը մուտքում կստանա N բնական թիվ, ապա հաջորդականություն N ամբողջ տարրերից կազմված։ Պահանջվում է արտածել հաջորդականության այն երկու տարրերը որոնց գումարն ամենամոտն է 0֊ին։ Այդպիսիք մի քանիսը լինելու դեպքում արտածել առաջինը։

3.11 Գրել ծրագիր, որը մուտքում կստանա երկու 6x6 մատրիցներ՝ տող առ տող և կարտածի այդ մատրիցների տարբերությունը։ Անհրաժեշտ է արտածել մատրիցի տարրերը տող առ տող՝ նույն տողի տարրերը բաժանելով միմյանցից բացատանիշով։

3.12 Գրել ծրագիր, որը մուտքում կստանա 5x10 մատրից՝ տող առ տող և կարտածի այդ մատրիցի տրանսպոնացված մատրիցան։ Անհրաժեշտ է արտածել մատրիցի տարրերը տող առ տող՝ նույն տողի տարրերը բաժանելով միմյանցից բացատանիշով։

3.13 Գրել ծրագիր, որը մուտքում կստանա K (1 ≤ K ≤ 6) թիվը, ապա 6x5 մատրիցի տարրերը՝ տող առ տող։ Անհրաժեշտ է հեռացնել մատրիցից K֊րդ տողը և արտածել ստացված նոր մատրիցը։ Անհրաժեշտ է արտածել մատրիցի տարրերը տող առ տող՝ նույն տողի տարրերը բաժանելով միմյանցից բացատանիշով։

3.14 Գրել ծրագիր, որը մուտքում կստանա K (1 ≤ K ≤ 5) թիվը, ապա 6x5 մատրիցի տարրերը՝ տող առ տող։ Անհրաժեշտ է հեռացնել մատրիցից K֊րդ սյունը և արտածել ստացված նոր մատրիցը։ Անհրաժեշտ է արտածել մատրիցի տարրերը տող առ տող՝ նույն տողի տարրերը բաժանելով միմյանցից բացատանիշով։

3.15 Գրել ծրագիր, որը մուտքում կստանա 6x6 մատրիցի տարրերը՝ տող առ տող։ Անհրաժեշտ է սպիրալաձև արտածել մատրիցի տարրերը սկսելով մատրիցի առաջին տարրից։

3.16 Գրել ծրագիր, որը մուտքում կստանա դրական թիվ և կարտածի ‘YES՛ եթե այդ թիվը պարզ է և ‘NO’ հակառակ դեպքում։ Ստուգումը անհրաժեշտ է կատարել ֆունկցիայի միջոցով։

3.17 Գրել ծրագիր, որը մուտքում կստանա դրական ամբողջ թիվ և կարտածի այդ թվի երկուական ներկայացումը։ Տասականից երկուականի անցումը իրականացնել ֆունկցիայի միջոցով։

3.18 Գրել ֆունկցիա, որը որպես արգումենտ կստանա n բնական թիվը և կվերադարձնի n!/(n+1) արտահայտության արժեքը։ Ապա հաշվել հետևյալ արտահայտության արժեքը 1!/2 + 2!/3 + 3!/4 + 4!/5 + 5!/6 + 6!/7 + 7!/8 + 8!/9 + 9!/10 + 10!/11: Պատասխանը արտածել 5 նշի ճշտությամբ։

3.19 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա A և B ամբողջ թվերը և O (+, -, *, /, %) գործողության նշանը։ Ծրագիրը որպես աշխատանքի արդյունք պետք է արտածի O գործողությունը կիրառված A և B թվերի նկատմամաբ։ Անհրաժեշտ է յուրաքանչյուր գործողության համար ստեղծել առանձին ֆունկցիա։

3.20 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա եռանկան 3 կողմերը և կարտածի դռա մակերեսը։ Խնդիրը լուծելու համար օգտվել Հերոնի բանաձևից և sqrt() ֆունկցիայից։

3.21 Գրել ծրագիր, որը մուտքում կստանա n (1 ≤ n ≤ 10) և կարտածի մուտքային թվի ֆակտորիալի և ֆիբոնաչիի հաջորդականության n֊րդ տարրի հարաբերությունը 5 նիշի ճշտությամբ։: Անհրաժեշտ է, որ թվի ֆակտորիալ հաշվելու և ֆիբոնաչիի հաջորդականության n֊րդ տարրի հաշվարկի ֆունկցիաները լինեն ռեկուրսիվ:

3.22 Գրել ծրագիր, որը մուտքում կստանա երկու բնական թվեր և կարտածի դրանց ամենամեծ ընդհանուր բաժանարարը: Անհրաժեշտ է խնդիրը լուծել ռեկուրսիվ ֆունկցիայի միջոցով։

3.23 Գրել ծրագիր որը մուտքում տրված n ≥ 0 ամբողջ և x իրական թվերի համար գտնում է Չեբիշևի բազմանդամի n-րդ գործակիցը։ Չեբիշևի Tn(x) բազմանդամը սահմանվում է հետևյալ ձևով:

3.24 Տրված է Kn ռեկուրենտ հաջորդականություն, որի Ki տարրը որշվում է հետևյալ կանոններով․
  . Ki = i, եթե i ≤ 3
  . Ki = 2 * Ki + 3, եթե i - ն կենտ է և i > 3
  . Ki = 3 + Ki / 2, եթե i - ն զույգ է և i > 3
Գրել ծրագիր որը մուտքում կստանա i(i ≤ 1000000000) բնական թիվը և կարտածի հաջորդականության i֊րդ տարրը :

3.25 Պահանջվում է գրել ծրագիր, որը մուտքում կստանա երկու 10 երկարության սորտավորված զանգված և կարտածի այդ զանգվածների միավորման արդյունքում ստացված սորտավորված զանգվածը։

3.26 Պահանջվում է գրել ծրագիր, որը մուտքում ստանալով N բնական թիվ, ապա N ամբողջ տարրերից կազմված հաջորդականություն, կսորտավորի հաջորդականության տարրերը նվազման կարգով և կարտածի այն։ Արտածվող թվերը միմյանցից պետք է բաժանված լինեն բացատանիշով։ Խնդիրը լուծելիս օգտագործել զանգված և merge sort ալգորիթմը։


============== 04 Classes ===============

4.1 Գրել ծրագիր, որը մուտքում կստանա N չվերթների մասին տեղեկություն՝ յուրաքանչյուր չվերթի վերջնակետ-քաղաք և գնացքի համար, ապա M քաղաքի անվանում։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի այն գնացքների համարները , որոնք մեկնում են տրված M քաղաքը։ Այդպիսիք չլինելուն դեպքում արտածել “Unreachable city!” հաղորդագրությունը։

 Նկարագրել TRAIN անունով դաս, որն ունի հետևյալ դաշտերը.

 .չվերթի վերջնակետ - քաղաք
 .գնացքի համարը

4.2 Գրել ծրագիր, որը մուտքում կստանա N չվերթների մասին տեղեկություն՝ յուրաքանչյուր չվերթի վերջնակետ-քաղաք, գնացքի համար և մեկնելու օր, ապա M քաղաքի անվանում և D օր։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի այն գնացքների համարները, որոնք տրված D օրը մեկնում են M քաղաքը։ Այդպիսիք չլինելուն դեպքում արտածել “Unreachable city!” հաղորդագրությունը։ 

 Նկարագրել TRAIN անունով դաս, որն ունի հետևյալ դաշտերը.

 .չվերթի վերջնակետ - քաղաք
 .չվերթի օր
.գնացքի համարը

4.3 Գրել ծրագիր, որը մուտքում կստանա N չվերթների մասին տեղեկություն՝ յուրաքանչյուր չվերթի սկզբնակետ-քաղաք, վերջնակետ-քաղաք և գնացքի համար, ապա A, B և C քաղաքների անվանումները։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի չվերթների համարների զույգեր, զույգի առաջին գնացքը պետք է անցնի A-ից B, իսկ երկրորդը՝ B-ից C. Չվերթների համարները պետք է արտածվեն նույն հերթականությամբ ոնց ներմուծվել էին․ Այդպիսիք չլինելուն դեպքում արտածել “Unreachable city!” հաղորդագրությունը։

 Նկարագրել TRAIN անունով դաս, որն ունի հետևյալ դաշտերը.

 .չվերթի սկզբնակետ - քաղաք
 .չվերթի վերջնակետ - քաղաք
 .գնացքի համարը

4.4 Գրել ծրագիր, որը մուտքում կստանա N հեռուստացույցների մասին տեղեկություն՝ յուրաքանչյուր հեռուստացույցի մոդելի անուն, արտադրող երկիր և անկյունագծի երկարություն, ապա M մոդելի անվանումը։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի բոլոր տրված M մոդելի հեռուստացույցների անկյունագծի չափերը և արտադրող երկիրը։ Այդպիսիք չլինելուն դեպքում արտածել “Not found!” հաղորդագրությունը։ 

 Նկարագրել TV անունով դաս, որն կունենա հետևյալ դաշտերը.

 .TV մոդելի անուն
 .արտադրող երկիր
.անկյունագծի երկարություն

4.5 Գրել ծրագիր, որը մուտքում կստանա N հեռուստացույցների մասին տեղեկություն՝ յուրաքանչյուր հեռուստացույցի մոդելի անուն, արտադրող երկիր և վաճառքի երկիր, ապա հեռուստացույցի A արտադրման երկիրը և B վաճառքի երկիրը։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի բոլոր հեռուստացույցների մոդելները որոնք արտադրվում են A երկրում և վաճառվում B֊ում։ Այդպիսիք չլինելուն դեպքում արտածել “Not found!” հաղորդագրությունը։

Նկարագրել TV անունով դաս, որն կունենա հետևյալդաշտերը.

.TV մոդելի անուն
.արտադրող երկիր
.վաճառքի երկիր

4.6 Գրել ծրագիր, որում իրակացված է Time դասը, որի օբյեկտներն իրենցից ներկայցնում են ժամանակը։ Ժամանակը տրվում է ժամ (0-ից 23) և րոպե (0-ից 59) դաշտերով։ Ծրագիրը մուտքում պետք է ստանա N ժամանակի մասին տեղեկություն՝ ժամ և րոպե, ապա պետք է արտածի կեսօրին ամենամոտ 2 ժամանակները։ Սկզբում պետքէ արտածվի այն ժամը, որը օրվա ընթացքում գալիս է ավելի շուտ։

4.7 Գրել ծրագիր, որում իրակացված է TimeS դասը, որի օբյեկտներն իրնեցից ներկայացնում են ժամանակը։ Ժամանակը տրվում է ժամ (0-ից 23), րոպե (0-ից 59) և վայրկյան (0-ից 59) դաշտերով։ Ծրագիրը մուտքում պետք է ստանա N ժամանակի մասին տեղեկություն՝ ժամ, րոպե և վայրկյան, ապա պետք է արտածի օրվա ամենաուշ պահը։

4.8 Գրել ծրագիր, որը մուտքում կստանա դասարանի աշակերտների քանակը ապա յուրաքանչյուրի անունն և 5 առարկաների քննությունների գնահատականները։ Ծրագիրը պետք է արտածի ամենաբարձր միջին որակական գնահատական ունեցող աշակերտի անունը։

4.9 Մուտքում տրվում է ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ և ‘]’ սիմվոներից բաղկացած հաջորդականություն, պահանջվում է արտածել YES, եթե այն փակագծերի ճիշտ արտահայտություն է և NO՝ հակառակ դեպքում։

4.10 Մուտքում տրվում է 10x10 չափերով մատրից՝ բաղկացած զրոներից և մեկերից, պահանջվում է արտածել YES, եթե հնարավոր է վերևի ձախ անկյունից հասնել ներքևի աջ անկյունը՝ ամեն քայլին շարժվելով 1 վանդակ վերև, ներքև, ձախ կամ աջ և չանցնելով մեկերի վրայով, և NO՝ հակառակ դեպքում։ Հայտնի է որ վերևի ձախ և ներքևի աջ անկյունների վանդակները միշտ 0 են։ Խնդիրը լուծելիս կարելի է կիրառել ալիքի ալգորիթմը։

4.11 Մուտքում հերթականությամբ տրվում է շախմատի տախտակի վրա գտնվող սպիտակ և սև թագավորների վանդակների համարները, ապա N բնական թիվը և հաջորդականություն N շախմատի վանդակների համարներից բաղկացած։ Պահանջվում է արտածել YES եթե սպիտակ թագավորը կարող է ուտել սևին առանց անցնելու նշված N վանդակներից որևիցե մեկով, համարելով, որ սև թագավորը անշարժ է և NO՝ հակառակ դեպքում։ Խնդիրը լուծելիս օգտագործել հերթ։

4.12 Հայտնի է, արտադրամասում կան առանձին բանվորական խմբեր, որոնք ունեն անվանումներ։ 
Պահանջվում է գրել ծրագիր, որը մուտքում կստանա խմբերի քանակը, ապա ըստ հերթականության յուրաքանչյուր խմբի անվանումը, խմբում բանվորների քանակը և յուրաքանչյուր բանվորի անունն ու ծննդյան թիվը։ Ծրագիրը պետք է արտածի բոլոր այն խմբերի անվանումները, որոնց բոլոր բանվորները ծնվել են 1974 թվականից հետո։ Այդպիսիք չլինելու դեպքում արտածել “Not found!” հաղորդագրությունը։
Ծրագիրը լուծելիս օգտագործել Group և Worker դասերը։

4.13 Հայտնի է, արտադրամասում կան առանձին բանվորական խմբեր, որոնք ունեն արտադրամասի համարներ, որում աշխատում են։ Պահանջվում է գրել ծրագիր, որը մուտքում կստանա խմբերի քանակը, ապա ըստ հերթականության յուրաքանչյուր խմբի արտադրամասի անվանումը, խմբում բանվորների քանակը և յուրաքանչյուր բանվորի անունն ու ծննդյան թիվը։ Ծրագիրը պետք է արտածի բոլոր այն բանվորների անունները, որոնք 
աշխատում են A-15 արտադրամասում։ Այդպիսիք չլինելու դեպքում արտածել “Not found!” հաղորդագրությունը։ 
Ծրագիրը լուծելիս օգտագործել Group և Worker դասերը։

4.14 Գրել ծրագիր, որը մուտքում կստանա դպրոցի ընտրված դասարանների քանակը, ապա յուրաքանյուր  դասարանի անվանումը, դասարանում սովորող աշակերտների քանակը, յուրաքանչյուրի անունն ու 5 առարկաների քննությունների գնահատականները։ Ծրագիրը պետք է արտածի ամենաբարձր առաջադիմությամբ դասարանի անվանումը։ Խնդիրը լուծելիս օգտագործել Class և Student դասերը։ Դասարանի առաջադիմությունը դա աշակերտների գնահատականների հանրագումարի և աշակերտների քանակի հարաբերությունն է։

4.15 Պահանջվում է գրել ծրագիր որում իրականցված են հետևյալ դասերը՝ Shape, Triangle, Rectangle, Circle

.Shape դասը հանդիսանում է բազային աբստրակտ դաս մնացած դասերի համար և դրանից ժառանգված դասերի օբյեկտներն 
իրենցից ներկայացնում են երկրաչափական պատկերներ
.Triangle դասի օբյեկտները եռանկյուններ են
.Rectangle դասի օբյեկտներն ուղղանկյուններ են
.Circle դասի օբյեկտները շրջաններ են

Դասերի մեթոդներ.

.Shape դասից ժառանգված բոլոր դասերը պետք է պարունակեն տվյալ դասի օբյեկտ ստեղծելու համար անհրաժեշտ  կոնստրուկտոր(ներ) կամ մեթոդներ:
Պատկերի մակերեսը հաշվող ֆունկցիա, որը Shape դասում պետք է սահմանված լինի որպես մաքուր  վիրտուալ ֆունկցիա:
Ծրագիրը մուտքում կստանա N մարմինների անունները և նրանց չափերը (եռանկյան դեպքում հիմքը ապա բարձրությունը)։ 
Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի բոլոր մարմինների մակերեսները աճման կարգով։

4.16 Պահանջվում է գրել ծրագիր որում իրականցված են հետևյալ դասերը՝ Shape, Cube, Pyramid, Ball

․Shape դասը հանդիսանում է բազային աբստրակտ դաս մնացած դասերի համար և դրանից ժառանգված դասերի օբյեկտներն
․իրենցից ներկայացնում են երկրաչափական եռաչափ մարմիններ
․Cube դասի օբյեկտները խորանարդներ են
․Pyramid դասի օբյեկտներն քառակուսի բուրգեր են
․Ball դասի օբյեկտները գնդեր են
 
   Դասերի մեթոդներ.

․Shape դասից ժառանգված բոլոր դասերը պետք է պարունակեն տվյալ դասի օբյեկտ ստեղծելու համար անհրաժեշտ
կոնստրուկտոր(ներ) կամ մեթոդներ․Մարմինների ծավալ հաշվող ֆունկցիա, որը Shape դասում պետք է սահմանված լինի որպես մաքուր վիրտուալ 
ֆունկցիան:
Ծրագիրը մուտքում կստանա N մարմինների անունները և նրանց չափերը(բուրգի դեպքում նախ հիմք կողմի երկարությունը ապա բարձրությունը)։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի բոլոր 
մարմինների ծավալների գումարը

4.17 Պահանջվում է գրել ծրագիր որում իրականցված են Person և Employee դասերը։ Person դասի օբյեկտները մարդիկ են, իսկ Employee դասը ժառանգված է Person դասից, և այդ դասի օբյեկտները աշխատողներ են:

Դասերի դաշտեր.

.Person դասում առնվազն պետք է լինեն անուն, ազգանուն դաշտերը
.Employee դասում առնվազն պետք է լինեն պաշտոն և աշխատավարձ դաշտերը

Ծրագիրը մուտքում պետք է ստանա N աշխատողների տվյալները հերթականությամբ՝ անուն, ազգանուն,
պաշտոն և աշխատավարձ։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի բոլոր աշխատողների ազգանունները և պաշտոնները, որոնց աշխատավարձը միջին աշխատավարձից ցածր չէ։

4.18 Պահանջվում է գրել ծրագիր, որում իրականցված են Person և Employee դասերը։ Person դասի օբյեկտները
    մարդիկ են, իսկ Employee դասը ժառանգված է Person դասից, և այդ դասի օբյեկտները աշխատողներ են:

Դասերի դաշտեր.

.Person դասում առնվազն պետք է լինեն անուն, ազգանուն և ծննդյան տարեթիվ դաշտերը
.Employee դասում առնվազն պետք է լինի աշխատավարձ դաշտերը

Ծրագիրը մուտքում պետք է ստանա N աշխատողների տվյալները հերթականությամբ՝ անուն, ազգանուն, 
ծննդյան տարեթիվ և աշխատավարձ։ Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի առավելագույն
աշխատավարձ ստացող նվազագույն տարիքով աշխատողների ազգանունները, այդպիսիք չլինելու դեպքում արտածի
"Not found!":

4.19 Պահանջվում է գրել ծրագիր, որում իրականցված են հետևյալ դասերը՝ Book, FictionBook, ScientificBook

.Book դասի օբյեկտները գրքեր են
.FictionBook դասը ժառանված է Book դասից և այդ դասի օբյեկտները գեղարվեստական գրքեր են
.ScientificBook դասը ժառանված է Book դասից և այդ դասի օբյեկտները գիտական գրքեր են

 Դասերի դաշտեր.

.Book դասում պետք է լինի վերնագիր դաշտը
.FictionBook դասում պետք է լինեն վաճառված օրինակների քանակ և տպաքանակ դաշտերը
.ScientificBook դասում պետք է լինեն գրքի գին, էջերի քանակ և գրադարաններին տրված օրինակների քանակ դաշտերը
    
Դասերի մեթոդներ.

.Book, FictionBook, ScientificBook դասի օբյեկտներ ստեղծելու համար անհրաժեշտ կոնստրուկտորներ
.popularity անունով ֆունկցիա, որը հաշվում է գեղարվեստական գրքի ժողովրդականությունը 
 (որպես սահող ստորակետով թիվ) հետևյալ բանաձևով՝ (s / c) * (s / 1000), որտեղ s-ը գրքի վաճառված 
 օրինակների քանակն է, իսկ c-ն գրքի տպաքանակն է
.expensive անունով ֆունկցիա, որը հաշվում է գիտական գրքի թանկարժեքության աստիճանը
  (որպես սահող ստորակետով թիվ) հետևյալ բանաձևով՝ գին/էջերի քանակ
  Ծրագիրը մուտքում պետք է ստանա N գեղարվեստական գրքերի տվյալները հերթականությամբ՝ վերնագիր, 
  տպաքանակ, վաճառված օրինակների քանակ։ Ապա M գիտական գրքերի տվյալներ հերթականությամբ՝ վերնագիր, 
  գին, էջերի քանակ, գրադարաններին տրված գրքերի քանակ։

Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի այն գեղարվեստական գրքերի վերնագրերը որոնք ունեն 
ամենաբարձր ժողովրդականությունը։ Ինչպես նաև այն գիտական գրքի վերնագիը, որը ամենաշատն է տրվել գրադարաններին
և ունի միջինից ցածր թանկարժեքություն, այդպիսին չլինելու դեպքում արտածել "Not found!"։

4.20 Պահանջվում է գրել ծրագիր, որում իրականցված են հետևյալ դասերը՝ Book, FictionBook, ScientificBook

.Book դասի օբյեկտները գրքեր են
.FictionBook դասը ժառանված է Book դասից և այդ դասի օբյեկտները գեղարվեստական գրքեր են
.ScientificBook դասը ժառանված է Book դասից և այդ դասի օբյեկտները գիտական գրքեր են

Դասերի դաշտեր.

.Book դասում պետք է լինեն հեղինակի անուն և ազգանուն դաշտերը
.FictionBook դասում պետք է լինի ժանր դաշտը՝ ՛novel՛, ՛story՛ և ՛poem՛ արժեքներից մեկով
.ScientificBook դասում պետք է լինի բնագավառ դաշտը՝ ՛informatics՛, ‘physics’, ‘mathematics’  և ‘chemistry’ արժեքներից մեկով
 Ծրագիրը մուտքում պետք է ստանա N գեղարվեստական գրքերի տվյալները հերթականությամբ՝ հեղինակի անուն,
 ազգանուն և ժանր։ Ապա M գիտական գրքերի տվյալներ հերթականությամբ՝ հեղինակի անուն և բնագավառ։

 Որպես ծրագրի աշխատանքի արդյունք այն պետք է արտածի այն մաթեմատիկոսների անունները որոնք ունեն հրատարակված
 պոեմներ, եթե չկան այդպիսիք արտածի “Not found!”։
